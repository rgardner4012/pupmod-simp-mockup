# Manual action to build, sign, and attach a release's RPMs
# ------------------------------------------------------------------------------
#
#             NOTICE: **This file is maintained with puppetsync**
#
# This file is updated automatically as part of a puppet module baseline.
#
# The next baseline sync will overwrite any local changes to this file!
#
# ==============================================================================
#
# This pipeline uses the following GitHub Action Secrets:
#
#   GitHub Secret variable               Notes
#   -------------------------------      ---------------------------------------
#   PUPPETFORGE_API_TOKEN
#   SIMP_CORE_REF_FOR_BUILDING_RPMS      simp-core ref (tag) to use to build
#                                        RPMs with `rake pkg:single`
#   SIMP_DEV_GPG_SIGNING_KEY             GPG signing key's secret key
#   SIMP_DEV_GPG_SIGNING_KEY_ID          User ID (name) of signing key
#   SIMP_DEV_GPG_SIGNING_KEY_PASSPHRASE  Passphrase to use GPG signing key
#
# ------------------------------------------------------------------------------
#
# NOTES:
#
# * The CHANGLOG text is altered to remove RPM-style date headers, which don't
#   render well as markdown on the GitHub release pages
---
name: 'RELENG: Build + attach RPMs to GitHub Release'

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Release tag"
        required: true
      clobber:
        description: "Clobber assets? (default: no)"
        required: false
        default: no
      clean:
        description: "Wipe existing assets? (default: no)"
        required: false
        default: no
      repostory:
        description: "Repository to build"
        required: false
        default: ${{ github.repository }}

env:
  TARGET_REPO: ${{ (github.event.inputs.repository != null && format('{0}/{1}', github.repository_owner, github.event.inputs.repository) || github.repository }}
  RELEASE_TAG: ${{ github.event.inputs.release_tag }}

jobs:
  create-and-attach-rpms-to-github-release:
    name: Build and attach RPMs to Release
    runs-on: ubuntu-20.04
    steps:
      - name: Query info for Release ${{ github.event.inputs.release_tag }}
        id: release-api
        run: |
          echo "::warning ::TARGET_REPO: $TARGET_REPO"
          echo "::warning ::RELEASE_TAG: $RELEASE_TAG"
          set -e -u -o pipefail
          ###api_url="${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases/tags/${{ github.event.inputs.release_tag }}"
          api_url="${GITHUB_API_URL}/repos/${TARGET_REPO}/releases/tags/${RELEASE_TAG}"
          url="$(curl -H "Accept: application/vnd.github.v3+json" "$api_url" | jq -r .url)"
          assets_url="$(curl -H "Accept: application/vnd.github.v3+json" "$api_url" | jq -r .assets_url)"
          echo "::set-output name=url::${url}"
          echo "::set-output name=assets_url::${assets_url}"

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.release_tag }}
          clean: true
          fetch-depth: 0

      - name: 'Build & Sign RPMs for ${{ github.event.inputs.release_tag }} Release'
        # FIXME don't stay on @main; switch to @v? before release
        uses: simp/github-action-build-and-sign-pkg-single-rpm@main
        id: build-and-sign-rpm
        with:
          gpg_signing_key: ${{ secrets.SIMP_DEV_GPG_SIGNING_KEY }}
          gpg_signing_key_id: ${{ secrets.SIMP_DEV_GPG_SIGNING_KEY_ID }}
          gpg_signing_key_passphrase: ${{ secrets.SIMP_DEV_GPG_SIGNING_KEY_PASSPHRASE }}
          simp_core_ref_for_building_rpms: ${{ secrets.SIMP_CORE_REF_FOR_BUILDING_RPMS }}

      # TODO: implement me!
      - name: 'TODO: Upload RPM file(s) to GitHub Release'
        id: upload_rpm_assets
        run: |
          echo "assets url: ${{ steps.release-api.outputs.assets_url }}"
          echo TODO imlement me!
          echo "::warning ::files: ${{ steps.build-and-sign-rpm.outputs.rpm_file_paths }}
        #env:
        #  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #with:
        #  upload_url: ${{ steps.release-api.outputs.assets_url }}
        #  asset_path: ${{ steps.build-and-sign-rpm.outputs.rpm_file_path }}
        #  asset_name: ${{ steps.build-and-sign-rpm.outputs.rpm_file_basename }}
        #  asset_content_type: application/octet-stream

